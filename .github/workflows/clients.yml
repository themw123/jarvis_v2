name: Build and Release

on:
  push:
    branches:
      - server-client
  workflow_dispatch:

jobs:
  linux-client-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.4"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev python3-pyaudio
          python -m pip install --upgrade pip
          pip install -r client/requirements_linux.txt

      - name: Build application
        run: |
          cd client
          python setup.py build

      - name: Archive build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-linux
          path: client/build/

  windows-client-build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.4"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_windows.txt

      - name: Build application
        run: python setup.py build
        shell: cmd

      - name: Archive build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-windows
          path: build/

  prepare-release:
    needs: [linux-client-build, windows-client-build]
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Set release SHA
        run: echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Release-${{ env.SHA }}
          release_name: Releases
          draft: false
          prerelease: false

      - name: Output release URL
        run: echo "release_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT

  linux-client-package-and-upload:
    needs: [linux-client-build, prepare-release]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-output-linux

      - name: Zip the build directory
        run: zip -r linux-client.zip exe.linux-x86_64-3.11

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.release_url }}
          asset_path: ./linux-client.zip
          asset_name: linux-client.zip
          asset_content_type: application/zip

  windows-client-package-and-upload:
    needs: [windows-client-build, prepare-release]
    runs-on: windows-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-output-windows

      - name: Zip the build directory
        run: Compress-Archive -Path exe.win-amd64-3.11 -DestinationPath windows-client.zip
        shell: pwsh

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.release_url }}
          asset_path: ./windows-client.zip
          asset_name: windows-client.zip
          asset_content_type: application/zip
