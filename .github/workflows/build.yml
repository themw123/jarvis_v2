name: Build and Release

on:
  push:
    branches:
      - server-client
  workflow_dispatch:

jobs:
  windows-backend-build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.4"

      - name: Ausgabe des aktuellen Verzeichnisinhalts und Pfadüberprüfung
        run: |
          cd backend
          echo "Aktuelles Verzeichnis: $(pwd)"
          echo "Inhalt des aktuellen Verzeichnisses:"
          ls -la
          echo "Inhalt des backend Verzeichnisses:"
          ls -la backend
        shell: bash

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash

      - name: Build application
        run: |
          cd backend
          python setup.py build
        shell: cmd

      - name: Archive build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-windows
          path: build/exe.*

  prepare-release:
    needs: [windows-backend-build]
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Set release SHA
        run: echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Release-${{ env.SHA }}
          release_name: Release Backend
          draft: false
          prerelease: false

      - name: Output release URL
        run: echo "release_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT

  windows-backend-package-and-upload:
    needs: [windows-backend-build, prepare-release]
    runs-on: windows-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-output-windows

      - name: Zip the build directory
        run: Compress-Archive -Path exe.win-amd64-3.11 -DestinationPath windows-backend.zip
        shell: pwsh

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.release_url }}
          asset_path: ./windows-backend.zip
          asset_name: windows-backend.zip
          asset_content_type: application/zip
