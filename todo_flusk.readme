input and output stream/generator als endpoint.
Websocket besser geeignet

@app.route("/stream", methods=["POST"])
def stream_data():
    def generate():
        chunk_size = 4096
        while True:
            chunk = flask.request.stream.read(chunk_size)
            if len(chunk) == 0:
                break
            yield chunk

    return Response(generate(), mimetype="application/octet-stream")




API aufbau, beispiel stt mit whisper_local:
im client einfach anstatt dem hier
segments, info = self.model.transcribe(
  audio_file,
  beam_size=5
)
den flask server callen und im server dann den code ausführen


bei tts_piper läuft das bischen anders:
brain_text ganz normal mittels client an unser backend schicken
im backend dann dateie in schleife auslesen(main thread) und am anfang einen thread starten der die da rein schreibt.
also genau anders rum. vorher wa das auslesen/abspielen im thread